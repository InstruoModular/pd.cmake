name: C/C++ CI
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  LIBNAME: simple
jobs:
  macos-universal-build:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        precision: [32, 64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install PureData and Deps
        run: |
          brew install --cask pd
      - name: Build Object
        if: ${{ matrix.arch == 'arm64' }}
        run: |
          cmake . -B build -DCMAKE_OSX_ARCHITECTURES=arm64
          cmake --build build -j $(sysctl -n hw.logicalcpu)
      - name: Build Object
        if: ${{ matrix.arch != 'arm64' }}
        run: |
          cmake . -B build
          cmake --build build -j $(sysctl -n hw.logicalcpu)
      - name: Upload Object
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.LIBNAME}}-macos-${{matrix.arch}}-${{matrix.precision}}
          path: PdObj
  windows-msbuild:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1
      - name: Install winget
        uses: Cyberboss/install-winget@v1
      - name: Install PureData
        run: |
          winget install -e --id MillerPuckette.PureData --accept-source-agreements
      - name: Configure and build
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release
  windows-mingw:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - if: runner.os == 'Windows'
        name: "Install mingw deps"
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          platform: x64
          install: make mingw-w64-x86_64-gcc mingw64/mingw-w64-x86_64-cmake
          update: false
      - name: Install winget
        uses: Cyberboss/install-winget@v1
      - name: Install PureData
        run: |
          winget install -e --id MillerPuckette.PureData --accept-source-agreements
      - if: runner.os == 'Windows'
        name: Build Object
        shell: msys2 {0}
        run: |
          cmake . -B build
          cmake --build build
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.LIBNAME}}-windows
          path: PdObj
  linux-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, aarch64, arm]
        precision: [32, 64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: PureData Sources
        run: |
          curl -L -o pd.tar.gz https://msp.ucsd.edu/Software/pd-0.54-1.src.tar.gz
          tar -xzf pd.tar.gz
          rm pd.tar.gz
          mv pd-* pure-data
          sudo apt update
          sudo add-apt-repository ppa:pure-data/pure-data -y
          sudo apt install puredata -y
      - name: Install aarch64 gcc
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt install gcc-aarch64-linux-gnu -y
          sudo apt install g++-aarch64-linux-gnu -y
      - name: Install arm gcc
        if: matrix.arch == 'arm'
        run: |
          sudo apt install gcc-arm-linux-gnueabihf -y
          sudo apt install g++-arm-linux-gnueabihf -y
      - name: Build Object
        if: matrix.arch == 'amd64'
        run: |
          cmake . -B build
          cmake --build build -- -j$(nproc)
      - name: Build Object
        if: matrix.arch == 'aarch64'
        run: |
          cmake . -B build -DCMAKE_TOOLCHAIN_FILE=./Toolchains/LinuxARM64.cmake
          cmake --build build -- -j$(nproc)
      - name: Build Object
        if: matrix.arch == 'arm'
        run: |
          cmake . -B build -DCMAKE_TOOLCHAIN_FILE=./Toolchains/LinuxARM32.cmake
          cmake --build build -- -j$(nproc)
      - name: Upload Object
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LIBNAME }}-linux-${{matrix.arch}}-${{matrix.precision}}
          path: PdObj
